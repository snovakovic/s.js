{"version":3,"sources":["s.common.js","s.array.js","s.is.js","s.msg.js","s.obj.js","s.resize-watch.js","s.string.js","s.utilities.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnfile":"s.js","sourcesContent":["/*****************************************************\r\n\t  s.js https://github.com/snovakovic/s.js\r\n    author: stefan.novakovich@gmail.com\r\n    version: 1.2.0\r\n ***************************************************/\r\n(function(s) {\r\n\r\n  //It will be added as s to global scope only if it does not exist already\r\n  window.s = window.s || s;\r\n\r\n  s.noConflict = function() {\r\n    if(window.s === window.snovakovic) {\r\n      window.s = undefined;\r\n    }\r\n    return window.snovakovic;\r\n  }\r\n\r\n  s.common = {};\r\n\r\n  s.common.isArrayWithValue = function(testVar) {\r\n    return s.is.array(testVar) && testVar.length > 0;\r\n  };\r\n\r\n})(window.snovakovic = function(callContext) {\r\n  var s = window.snovakovic;\r\n  //ALIASES THAT CAN BE USED AS FUNCTIONS AND AS OBJECT PROPERTIES\r\n  return {\r\n    //s.string.js\r\n    replaceAll: s.replaceAll.bind(null, callContext),\r\n    capitalize: s.capitalize.bind(null, callContext),\r\n    contains: s.contains.bind(null, callContext),\r\n    chop: s.chop.bind(null, callContext),\r\n    clean: s.clean.bind(null, callContext),\r\n    truncate: s.truncate.bind(null, callContext)\r\n  }\r\n\r\n});\r\n","/*****************************************************\r\n\t  Array Modification\r\n ***************************************************/\r\n(function(s, undefined) {\r\n\r\n  /**\r\n  * Loop through any array\r\n  * @example s.each([1,2,3,4,5,6,7], function(val, i) { console.log(val); } );\r\n  */\r\n  s.each = function(arr, callback) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      if (callback(arr[i], i) === false) {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n  * Iterate specific number of times\r\n  * @param  {Integer}   n  number of iterations\r\n  * @param  {Function} callback function that will be call per each iteration. use return false to break from iterations\r\n  * @example s.iterate(10, function(i) { console.log(i); } );\r\n  */\r\n  s.iterate = function(l, callback) {\r\n    for (var i = 0; i < l; i++) {\r\n      if (callback(i) === false) {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n  * Remove all occurrences of element from array\r\n  * @param arr {Array} array from where we want  to remove the values\r\n  * @param elToRemove {...} element that we want to remove from array\r\n  * @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\r\n   * @return {Array} new array without the removed values\r\n  * @example s.remove( ['a', 'b', 'c', 'd', 'c'], 'c' );\r\n  */\r\n  s.remove = function(arr, elToRemove, max) {\r\n    var pos;\r\n    if (max && (typeof max !== 'number' || max % 1 !== 0)) {\r\n      throw new Error('Invalid argument exception');\r\n    }\r\n\r\n    while (pos !== -1 && max !== 0) {\r\n      if (max) {\r\n        if (max >= 1) {\r\n          pos = arr.indexOf(elToRemove);\r\n          max--;\r\n        } else {\r\n          pos = arr.lastIndexOf(elToRemove);\r\n          max++;\r\n        }\r\n\r\n      } else {\r\n        pos = arr.indexOf(elToRemove);\r\n      }\r\n\r\n      pos > -1 && arr.splice(pos, 1);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n  * Shuffle values in the array\r\n  * @param arr {Array} input array that we want to shuffle\r\n  * @return {Array} shuffled array\r\n  * @example s.shuffle(['a', 'b', 'c', 'd', 'c']);\r\n  */\r\n  s.shuffle = function(arr) {\r\n    for (var j, x, i = arr.length; i; j = parseInt(Math.random() * i), x = arr[--i], arr[i] = arr[j], arr[j] = x);\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n  * Get the new array filled with default values\r\n  * @param val {....} default value that will fill the array\r\n  * @return len {Integer} size of the new array\r\n  * @example s.getFilledArray(0, 5);\r\n  */\r\n  s.getFilledArray = function(val, len) {\r\n    var rv = new Array(len);\r\n    while (--len >= 0) {\r\n      rv[len] = val;\r\n    }\r\n    return rv;\r\n  };\r\n\r\n  /**\r\n  * Returns new array containing only unique values from original array\r\n  * Doesn't support nested objects and array\r\n  */\r\n  s.unique = function(originalArr) {\r\n    var arr = [];\r\n    for (var i = 0; i < originalArr.length; i++) {\r\n      if (arr.indexOf(originalArr[i]) === -1) {\r\n        arr.push(originalArr[i]);\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n  * Returns first element of array if no condition is passed,\r\n  * else if there is condition returns first element of array that meets condition\r\n  * if element is not found undefined is returned\r\n  */\r\n  s.first = function(arr, condition) {\r\n    if (!s.common.isArrayWithValue(arr)) {\r\n      return undefined;\r\n    }\r\n\r\n    if (condition) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (condition(arr[i])) {\r\n          return arr[i];\r\n        }\r\n      }\r\n    } else {\r\n      return arr[0]\r\n    }\r\n\r\n    return undefined;\r\n\r\n  };\r\n\r\n  /**\r\n  * Returns last element of array if no condition is passed,\r\n  * else if there is condition returns last element of array that meets condition\r\n  * if element is not found undefined is returned\r\n  */\r\n  s.last = function(arr, condition) {\r\n    if (!s.common.isArrayWithValue(arr)) {\r\n      return undefined;\r\n    }\r\n\r\n    if (condition) {\r\n      for (var i = arr.length - 1; i >= 0; i--) {\r\n        if (condition(arr[i])) {\r\n          return arr[i];\r\n        }\r\n      }\r\n    } else {\r\n      return arr[arr.length - 1]\r\n    }\r\n\r\n    return undefined;\r\n\r\n  };\r\n\r\n  /*****\r\n   * Stack implementation LIFO last in first out\r\n  ******/\r\n  s.stack = function(defaultArray) {\r\n    return (function() {\r\n      var _stack = defaultArray || [];\r\n      return {\r\n        add: function(val) {\r\n          Array.isArray(val) ? Array.prototype.push.apply(_stack, val) : _stack.push(val);\r\n        },\r\n        remove: function() {\r\n          return _stack.length ? _stack.pop() : null;\r\n        },\r\n        peek: function() {\r\n          return _stack.length ? _stack[_stack.length - 1] : null;\r\n        },\r\n        array: _stack,\r\n        length: function() {\r\n          return _stack.length;\r\n        }\r\n      }\r\n    })();\r\n  };\r\n\r\n  /*****\r\n  * Queue implementation FIFI: first in first out\r\n  ******/\r\n  s.queue = function(defaultArray) {\r\n    return (function() {\r\n      var _queue = defaultArray || [];\r\n      return {\r\n        add: function(val) {\r\n          Array.isArray(val) ? Array.prototype.push.apply(_queue, val) : _queue.push(val);\r\n        },\r\n        addRange: function(range) {\r\n          Array.prototype.push.apply(_queue, range);\r\n        },\r\n        remove: function() {\r\n          return _queue.length ? _queue.shift() : null;\r\n        },\r\n        peek: function() {\r\n          return _queue.length ? _queue[0] : null;\r\n        },\r\n        array: _queue,\r\n        length: function() {\r\n          return _queue.length;\r\n        }\r\n      }\r\n    })();\r\n  };\r\n\r\n\r\n})(window.snovakovic);\r\n","/*****************************************************\r\n\t  Test Module part\r\n ***************************************************/\r\n(function(s) {\r\n\r\n  s.is = {};\r\n\r\n  s.is.defined = function(testVar) {\r\n    return typeof testVar !== 'undefined';\r\n  };\r\n\r\n  /**\r\n   * Test if variable has been defined and is not empty,\r\n   * Following will be treated as false\r\n   * s.is.empty(null); => true\r\n   * s.is.empty(undefined); => true\r\n   * s.is.empty({}); => true\r\n   * s.is.empty([]); => true\r\n   * s.is.empty(' '); => true\r\n   * s.is.empty('\\n\\t'); => true\r\n   * s.is.empty(null); => true\r\n  */\r\n  s.is.empty = function(testVar) {\r\n    if (typeof testVar === 'undefined' || testVar === null\r\n      || (typeof testVar === 'string' && (/^\\s*$/).test(testVar))) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof testVar === 'object') {\r\n      for (var key in testVar) {\r\n        if (Object.prototype.hasOwnProperty.call(testVar, key)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * VAR type check\r\n   */\r\n  s.is.string = function(testVar) {\r\n    return typeof testVar === 'string';\r\n  };\r\n\r\n  s.is.number = function(testVar) {\r\n    return typeof testVar === 'number';\r\n  };\r\n\r\n  s.is.boolean = function(testVar) {\r\n    return typeof testVar === 'boolean';\r\n  };\r\n\r\n  s.is.object = function(testVar) {\r\n    return typeof testVar === 'object' && testVar !== null && !Array.isArray(testVar);\r\n  };\r\n\r\n  s.is.function = function(testVar) {\r\n    return typeof testVar === 'function';\r\n  };\r\n\r\n  s.is.array = function(testVar) {\r\n    return typeof testVar === 'object' && Array.isArray(testVar);\r\n  };\r\n\r\n  s.is.arrayWithValue = function(testVar) {\r\n    return s.common.arrayWithValue(testVar);\r\n  };\r\n\r\n  /****\r\n  * STRING tests\r\n  ****/\r\n\r\n  s.is.alphabetic = function(str) {\r\n    var re = /^[a-zA-Z ]*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.alphanumeric = function(str) {\r\n    var re = /^[a-zA-Z0-9 ]*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.numeric = function(str) {\r\n    var re = /^[0-9 ]*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.lowercase = function(str) {\r\n    var re = /^[a-z ]*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.uppercase = function(str) {\r\n    var re = /^[A-Z ]*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.email = function(str) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.strongpassword = function(str) {\r\n    var re = /^(?=^.{6,}$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*$/;\r\n    return re.test(str);\r\n  };\r\n\r\n  s.is.ip = function(str) {\r\n    var re = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    return re.test(str);\r\n  };\r\n\r\n})(window.snovakovic);\r\n","/*****************************\r\n * sMsg - broadcast messages\r\n * example s.broadcast('something-happened', objToSend)\r\n * s.listen('something-happened', function(val) {\r\n *  console.log(val);\r\n * });\r\n ****************************/\r\n(function(s) {\r\n  var subscribers = [];\r\n\r\n  s.broadcast = function(to, obj) {\r\n    for (var i = 0; i < subscribers[to].length; i++) {\r\n      subscribers[to][i](obj);\r\n    }\r\n  };\r\n\r\n  s.listen = function(subscribe, cb) {\r\n    subscribers[subscribe] = subscribers[subscribe] ? subscribers[subscribe] : [];\r\n    subscribers[subscribe].push(cb);\r\n  };\r\n\r\n})(window.snovakovic);\r\n","/*****************************************************\r\n\t  Array Modification\r\n ***************************************************/\r\n(function(s) {\r\n\r\n  /**\r\n    * Loop over object properties.\r\n    * @param arr {Object} object which properties will be looped over\r\n    * @example s.getProperties({prop1:'val1', prop2:'val2'}, function(key, value){console.log(key + ' >> ' + value);});\r\n    */\r\n  s.getProperties = function(obj, callback) {\r\n    for (var prop in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n        if (callback(prop, obj[prop]) === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Shallow merge provided objects\r\n   * In case of the same property value from second object will override the value in the first object\r\n   * @param  {Objects} arbitrary number of objects that we want to merge\r\n   * @example s.merge({prop1:1,prop2:2}, {prop1:0,prop3:3}, {prop4: '4'});\r\n  */\r\n  s.merge = function() {\r\n    var merged = {};\r\n    var _merge = function(obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          merged[prop] = obj[prop];\r\n        }\r\n      }\r\n    };\r\n    _merge(arguments[0]);\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      _merge(arguments[i]);\r\n    }\r\n    return merged;\r\n  };\r\n\r\n  /**\r\n   * Same as merge. But with support for merging nested objects\r\n  */\r\n  s.deepMerge = function() {\r\n    var merged = {};\r\n    var _merge = function(obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            merged[prop] = s.deepMerge(merged[prop], obj[prop]);\r\n          }\r\n          else {\r\n            merged[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    _merge(arguments[0]);\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      _merge(arguments[i]);\r\n    }\r\n    return merged;\r\n  };\r\n\r\n})(window.snovakovic);\r\n","/************************************\r\n * MatchMedia polyfill for IE9 or below\r\n * ! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\r\n ****************************************/\r\nif (!window.matchMedia) {\r\n\r\n  window.matchMedia = (function() {\r\n\r\n    // For browsers that support matchMedium api such as IE 9 and webkit\r\n    var styleMedia = (window.styleMedia || window.media);\r\n\r\n    // For those that don't support matchMedium\r\n    if (!styleMedia) {\r\n      var style = document.createElement('style'),\r\n        script = document.getElementsByTagName('script')[0],\r\n        info = null;\r\n\r\n      style.type = 'text/css';\r\n      style.id = 'matchmediajs-test';\r\n\r\n      script.parentNode.insertBefore(style, script);\r\n\r\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\r\n      info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n      styleMedia = {\r\n        matchMedium: function(media) {\r\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\r\n\r\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\r\n          if (style.styleSheet) {\r\n            style.styleSheet.cssText = text;\r\n          } else {\r\n            style.textContent = text;\r\n          }\r\n\r\n          // Test if media query is true or false\r\n          return info.width === '1px';\r\n        }\r\n      };\r\n    }\r\n\r\n    return function(media) {\r\n      return {\r\n        matches: styleMedia.matchMedium(media || 'all'),\r\n        media: media || 'all'\r\n      };\r\n    };\r\n\r\n  })();\r\n}\r\n\r\n\r\n/************************************\r\n * sResizeWatch\r\n * whatch for resize events - and switching between layouts.\r\n * Detect when media query is triggered\r\n ****************************************/\r\n(function(s) {\r\n  var onFunctionStack = [];\r\n  var offFunctionStack = [];\r\n  var onceFunctionStack = [];\r\n  var resizeEndFunctionStack = [];\r\n  var onResizeFunctionStack = [];\r\n  var i;\r\n  var doit;\r\n  var currentScreenSizes = [];\r\n  //based on bootstrap breakpoints\r\n  var screenSizes = [\r\n    {\r\n      minWidth: 992,\r\n      name: 'desktop'\r\n    },\r\n    {\r\n      minWidth: 768,\r\n      maxWidth: 991,\r\n      name: 'tablet'\r\n    },\r\n    {\r\n      maxWidth: 767,\r\n      name: 'mobile'\r\n    }\r\n  ];\r\n\r\n  //set current screen sizes\r\n  function setCurrentScreenSizes() {\r\n    currentScreenSizes = [];\r\n    screenSizes.forEach(function(size) {\r\n      if (testSize(size)) {\r\n        currentScreenSizes.push(size);\r\n      }\r\n    });\r\n  }\r\n  setCurrentScreenSizes();\r\n\r\n  //MAIN RESIZE EVENT LISTENER\r\n  window.addEventListener('resize', function() {\r\n    onResizeFunctionStack.forEach(function(callback) {\r\n      callback();\r\n    });\r\n\r\n    clearTimeout(doit);\r\n    doit = setTimeout(onScreenResize, 50);\r\n  }, true);\r\n\r\n  function onScreenResize() {\r\n\r\n    for (i = 0; i < screenSizes.length; i++) {\r\n      var size = screenSizes[i];\r\n      if (!currentScreenSizes.some(function(currentSize) { return currentSize.name === size.name; })) {\r\n        if (testSize(size)) {\r\n          currentScreenSizes.push(size);\r\n          onScreenChange(size);\r\n        }\r\n      }\r\n\r\n      // remove current screen sizes if necessary\r\n      var indexesToRemove = [];\r\n      currentScreenSizes.forEach(function(currentSize, index) {\r\n        if (!testSize(currentSize)) {\r\n          indexesToRemove.push(index);\r\n        }\r\n      });\r\n\r\n      for (var x = indexesToRemove.length - 1; x >= 0; x--) {\r\n        offScreenChange(currentScreenSizes[indexesToRemove[x]]);\r\n        currentScreenSizes.splice(indexesToRemove[x], 1);\r\n      }\r\n\r\n    }\r\n\r\n    /** Call any on resize end event **/\r\n    //this should be at the bottom in case that function use any of other sResizeFunctionalities\r\n    resizeEndFunctionStack.forEach(function(callback) {\r\n      callback();\r\n    });\r\n\r\n  }\r\n\r\n  function onScreenChange(screenSize) {\r\n    if (onFunctionStack[screenSize.name]) {\r\n      onFunctionStack[screenSize.name].forEach(function(callback) {\r\n        callback();\r\n      });\r\n    }\r\n    if (onceFunctionStack[screenSize.name]) {\r\n      onceFunctionStack[screenSize.name].forEach(function(callback) {\r\n        callback();\r\n      });\r\n      onceFunctionStack[screenSize.name] = [];\r\n    }\r\n  }\r\n\r\n  function offScreenChange(screenSize) {\r\n    if (offFunctionStack[screenSize.name]) {\r\n      offFunctionStack[screenSize.name].forEach(function(callback) {\r\n        callback();\r\n      });\r\n    }\r\n  }\r\n\r\n  function testSize(size) {\r\n    var minMatch = size.minWidth ? window.matchMedia('(min-width: ' + size.minWidth + 'px)').matches : true;\r\n    var maxMatch = size.maxWidth ? window.matchMedia('(max-width: ' + size.maxWidth + 'px)').matches : true;\r\n\r\n    return (minMatch && maxMatch) && (size.minWidth || size.maxWidth);\r\n  }\r\n\r\n  function getSize(screenSizeName) {\r\n    for (i = 0; i < screenSizes.length; i++) {\r\n      if (screenSizeName === screenSizes[i].name) {\r\n        return screenSizes[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * PUBLIC METHODS\r\n   */\r\n  s.resizeWatch = {};\r\n\r\n  s.resizeWatch.on = function(screenSizeName, callback) {\r\n    this.queueOn(screenSizeName, callback);\r\n\r\n    var size = getSize(screenSizeName);\r\n    if (size && testSize(size)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  s.resizeWatch.once = function(screenSizeName, callback) {\r\n    var size = getSize(screenSizeName);\r\n    if (size && testSize(size)) {\r\n      callback();\r\n    } else {\r\n      onceFunctionStack[screenSizeName] = onceFunctionStack[screenSizeName] ? onceFunctionStack[screenSizeName] : [];\r\n      onceFunctionStack[screenSizeName].push(callback);\r\n    }\r\n  };\r\n\r\n  s.resizeWatch.queueOn = function(screenSizeName, callback) {\r\n    onFunctionStack[screenSizeName] = onFunctionStack[screenSizeName] ? onFunctionStack[screenSizeName] : [];\r\n    onFunctionStack[screenSizeName].push(callback);\r\n  };\r\n\r\n  s.resizeWatch.off = function(screenSizeName, callback) {\r\n    this.queueOff(screenSizeName, callback);\r\n\r\n    var size = getSize(screenSizeName);\r\n    if (size && !testSize(size)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  s.resizeWatch.queueOff = function(screenSizeName, callback) {\r\n    offFunctionStack[screenSizeName] = offFunctionStack[screenSizeName] ? offFunctionStack[screenSizeName] : [];\r\n    offFunctionStack[screenSizeName].push(callback);\r\n  };\r\n\r\n  s.resizeWatch.addSize = function(screenSize) {\r\n    if (typeof screenSize === 'object') {\r\n      screenSizes.push(screenSize);\r\n      if (testSize(screenSize)) {\r\n        currentScreenSizes.push(screenSize);\r\n      }\r\n    }\r\n  };\r\n\r\n  s.resizeWatch.onResizeEnd = function(callback) {\r\n    resizeEndFunctionStack.push(callback);\r\n  };\r\n\r\n  s.resizeWatch.onResize = function(callback) {\r\n    onResizeFunctionStack.push(callback);\r\n  };\r\n\r\n  s.resizeWatch.setNewScreenSizes = function(newScreenSizes) {\r\n    screenSizes = newScreenSizes;\r\n    setCurrentScreenSizes();\r\n  };\r\n\r\n  s.resizeWatch.getCurrentScreenSizes = function() {\r\n    return currentScreenSizes;\r\n  };\r\n\r\n  s.resizeWatch.is = function(screenSizeName) {\r\n    return currentScreenSizes.some(function(elem) {\r\n      return elem.name === screenSizeName;\r\n    });\r\n  };\r\n\r\n  s.resizeWatch.getAllScreenSizes = function() {\r\n    return screenSizes;\r\n  };\r\n\r\n})(window.snovakovic);\r\n\r\n","/*****************************************************\r\n \t\t\t  String Modification.\r\n ***************************************************/\r\n(function(s) {\r\n\r\n  /**\r\n  * Replace all occurrences in a string with a new value\r\n  * @example console.log(s.replaceAll(\"this is old value in old string\", \"old\", \"new\"))\r\n   */\r\n  s.replaceAll = function(str, find, replace) {\r\n    return str.replace(new RegExp(find.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replace);\r\n  };\r\n\r\n\r\n  /***********************************************\r\n   * Below methods has been taken from\r\n   * https://github.com/epeli/underscore.string\r\n  ************************************************/\r\n\r\n  /*\r\n   * Converts first letter of the string to uppercase. If true is passed as second argument the rest of the string will be converted to lower case.\r\n   * @example capitalize(\"foo Bar\"); => \"Foo Bar\"; capitalize(\"FOO Bar\", true); => \"Foo bar\"\r\n   * https://github.com/epeli/underscore.string\r\n  */\r\n  s.capitalize = function(str, lowercaseRest) {\r\n    var remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase();\r\n    return str.charAt(0).toUpperCase() + remainingChars;\r\n  };\r\n\r\n  /*\r\n   * test if string contains substring\r\n   * @ignore case - case is ignored on comparation\r\n   * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\r\n   * https://github.com/epeli/underscore.string\r\n  */\r\n  s.contains = function(str1, str2, ignoreCase) {\r\n    if (ignoreCase === true) {\r\n      str1 = str1.toLowerCase();\r\n      str2 = str2.toLowerCase();\r\n    }\r\n    return str1.indexOf(str2) !== -1;\r\n  };\r\n\r\n  /*\r\n   * Break string in array of substring\r\n   * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\r\n  */\r\n  s.chop = function(str, step) {\r\n    if (!str) {\r\n      return [];\r\n    }\r\n    str = String(str);\r\n    step = ~~step;\r\n    return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\r\n  };\r\n\r\n  /*\r\n  * Trim and replace multiple spaces with a single space.\r\n  * @example clean(' foo    bar   '); => 'foo bar'\r\n  */\r\n  s.clean = function(str) {\r\n    return str.trim().replace(/\\s\\s+/g, ' ');\r\n  };\r\n\r\n\r\n  /**\r\n  * Truncate string if it exceed max number of characters,\r\n  * apply provided truncate string at the end of truncated string (default: '...')\r\n  */\r\n  s.truncate = function(str, length, truncateStr) {\r\n    truncateStr = truncateStr || '...';\r\n    length = ~~length;\r\n    return str.length > length ? str.slice(0, length) + truncateStr : str;\r\n  };\r\n\r\n\r\n})(window.snovakovic);\r\n","/*****************************************************\r\n   Utilities\r\n ***************************************************/\r\n(function(s) {\r\n\r\n  /**\r\n  * Get random number between 2 provided numbers.\r\n\t* @example s.random(1, 10); get random number between 1 and 10 (1 and 10 are included)\r\n\t*/\r\n  s.random = function(from, to) {\r\n    if (s.is.numeric(from) && s.is.numeric(to)) {\r\n      return Math.floor(Math.random() * (to - from + 1) + from);\r\n    } else {\r\n      throw new Error('Invalid argument exception');\r\n    }\r\n  };\r\n\r\n  /**\r\n  * Get the parameter from URL by the name\r\n  * @param key {string} the key for which value will be retrieved\r\n  * @example s.getUrlParam(\"firstName\");\r\n  */\r\n  s.getUrlParam = function(key) {\r\n    var val = RegExp(key + '=' + '(.+?)(&|$)').exec(location.search) || null;\r\n    if (val === null) {\r\n      return null;\r\n    }\r\n    return decodeURI(val[1]);\r\n  };\r\n\r\n  /**********************************************\r\n  * returns function that can be executed only once\r\n  * @example var init = s.once(function(){ }): init();\r\n ************************************************/\r\n  s.once = function(fn, context) {\r\n    var result;\r\n\r\n    return function() {\r\n      if (fn) {\r\n        result = fn.apply(context || this, arguments);\r\n        fn = null;\r\n      }\r\n\r\n      return result;\r\n    };\r\n  }\r\n\r\n  /**********************************************\r\n  * Returns a function, that, as long as it continues to be invoked, will not be triggered\r\n   ************************************************/\r\n  s.debounce = function(func, wait) {\r\n    var timeout;\r\n    return function() {\r\n      var context = this;\r\n      var callNow = !timeout;\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(function() {\r\n        timeout = null;\r\n      }, wait);\r\n\r\n      if (callNow) {\r\n        func.apply(context, arguments);\r\n      }\r\n    };\r\n  };\r\n\r\n  /*************************\r\n  * execute function when condition becomes true\r\n  * example:\r\n  ** a = false;\r\n  ** s.execute(function() { console.log('a has become true')}).when(function() { return a;}):\r\n  ** setTimeout(function(){ a= true; },30);\r\n  ************************/\r\n  s.execute = function(executeCb) {\r\n    return (function() {\r\n      var _executeCb = executeCb;\r\n      var _conditionCb;\r\n      var _maxTries;\r\n      var _timeOut;\r\n      var _noTries = 0;\r\n\r\n      function when() {\r\n        _noTries++;\r\n        if (_conditionCb()) {\r\n          _executeCb();\r\n          clean();\r\n        } else if (!_maxTries || (_noTries < _maxTries)) {\r\n          setTimeout(when, _timeOut);\r\n        } else {\r\n          clean();\r\n        }\r\n      }\r\n\r\n      function clean() {\r\n        _executeCb = _conditionCb = _maxTries = _timeOut = _noTries = null;\r\n      }\r\n\r\n      return {\r\n        when: function(conditionCb, timeOut) {\r\n          _timeOut = timeOut || 5;\r\n          _conditionCb = conditionCb;\r\n\r\n          setTimeout(when);\r\n          return this;\r\n        },\r\n        limit: function(maxTries) {\r\n          _maxTries = maxTries;\r\n        }\r\n      };\r\n    } ());\r\n  };\r\n\r\n\r\n})(window.snovakovic);\r\n"],"sourceRoot":"/source/"}